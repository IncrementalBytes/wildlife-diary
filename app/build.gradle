apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    def versionPropsFile = rootProject.file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        def majorVersionProperty = versionProps['MAJOR_VERSION'].toInteger()
        def minorVersionProperty = versionProps['MINOR_VERSION'].toInteger()
        def versionCodeProperty = versionProps['VERSION_CODE'].toInteger()
        def updatedBuildVersion = versionProps['BUILD_VERSION'].toInteger() + 1

        versionProps['BUILD_VERSION']=updatedBuildVersion.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        def updatedVersionName = majorVersionProperty + "." + minorVersionProperty + "." + versionCodeProperty + "." + updatedBuildVersion

        defaultConfig {
            applicationId "net.whollynugatory.android.wildlife"
            minSdkVersion 29
            targetSdkVersion 30
            versionCode versionCodeProperty
            versionName updatedVersionName
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            testInstrumentationRunnerArguments clearPackageData: 'true'

            javaCompileOptions {
                annotationProcessorOptions {
                    arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
                }
            }
        }
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.applicationId}-${variant.name}-${variant.versionName}.apk"
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            ext.enableCrashlytics = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            includeAndroidResources = true
        }
    }

    allprojects {
        repositories {
            maven {
                url "https://jitpack.io"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Room
    implementation "androidx.room:room-runtime:2.3.0"
    annotationProcessor "androidx.room:room-compiler:2.3.0"

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:28.3.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-messaging'
    releaseImplementation 'com.google.firebase:firebase-crashlytics'
    releaseImplementation 'com.google.firebase:firebase-analytics'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    testImplementation "androidx.room:room-testing:2.3.0"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:1.10.19'
}
